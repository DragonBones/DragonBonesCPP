[dragonbones]
name = dragonbones
prefix = dragonbones_bindings

classes = DBCCFactory DBCCArmatureNode Animation DBCCArmature DragonBonesData ITextureAtlas

android_headers = -I%(androidndkdir)s/platforms/android-14/arch-arm/usr/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.7/libs/armeabi-v7a/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.7/include
android_flags = -D_SIZE_T_DEFINED_ 

clang_headers = -I%(clangllvmdir)s/lib/clang/3.3/include 
clang_flags = -nostdinc -x c++ -std=c++11

cocos_headers = -I%(cocosdir)s -I%(cocosdir)s/cocos -I%(cocosdir)s/cocos/editor-support -I%(cocosdir)s/cocos/platform/android -I%(cocosdir)s/external/curl/include/ios -I%(cocosdir)s/cocos/audio/include

cocos_flags = -DANDROID

cxxgenerator_headers = -I%(cxxgeneratordir)s/../external/dragonbones/ -I%(cxxgeneratordir)s/../external/dragonbones/animation -I%(cxxgeneratordir)s/../external/dragonbones/core -I%(cxxgeneratordir)s/../external/dragonbones/events -I%(cxxgeneratordir)s/../external/dragonbones/factories -I%(cxxgeneratordir)s/../external/dragonbones/geoms -I%(cxxgeneratordir)s/../external/dragonbones/objects -I%(cxxgeneratordir)s/../external/dragonbones/parsers -I%(cxxgeneratordir)s/../external/dragonbones/renderer -I%(cxxgeneratordir)s/../external/dragonbones/textures

# extra arguments for clang
extra_arguments = %(android_headers)s %(clang_headers)s %(cxxgenerator_headers)s %(cocos_headers)s %(android_flags)s %(clang_flags)s %(cocos_flags)s %(extra_flags)s

headers = %(cxxgeneratordir)s/../external/dragonbones/renderer/DBCCRenderHeaders.h

target_namespace = db
remove_prefix = DB
skip = Animation::[getAnimationDataList setAnimationDataList],
	DBCCArmature::[getBoundingBox],
	DragonBonesData::[operator=]

base_objects =
abstract_classes = ITextureAtlas IAnimatable  
classes_have_type_info = no
rename =
rename_functions =
rename_classes =
# classes for which there will be no "parent" lookup
classes_have_no_parents =

# base classes which will be skipped when their sub-classes found them.
base_classes_to_skip = BaseFactory Armature

# Determining whether to use script object(js object) to control the lifecycle of native(cpp) object or the other way around. Supported values are 'yes' or 'no'.
script_control_cpp = yes
